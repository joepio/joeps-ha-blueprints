blueprint:
  name: Hue-Style Motion Lighting (brightness-only v1.4)
  description: >
    Motion-triggered lighting with a user-defined night window.
    • Multiple sensors and lights
    • Separate day / night brightness
    • Fade-in / fade-out
    • Optional manual disable switch
    • No colour-temperature changes

  domain: automation

# ───── USER INPUTS ─────
  input:
    occupancy_sensors:
      name: Motion / occupancy sensors
      selector:
        entity:
          domain: binary_sensor
          device_class:
            - motion
            - occupancy
          multiple: true

    light_targets:
      name: Lights
      selector:
        entity:
          domain: light
          multiple: true

    off_delay:
      name: Off-delay (seconds)
      default: 180
      selector:
        number:
          min: 0
          max: 1800
          unit_of_measurement: s
          mode: box

    day_brightness:
      name: Day brightness (%)
      default: 75
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"

    night_brightness:
      name: Night brightness (%)
      default: 10
      selector:
        number:
          min: 1
          max: 100
          unit_of_measurement: "%"

    night_start:
      name: Night-mode starts
      default: "22:00:00"
      selector:
        time:

    night_end:
      name: Night-mode ends
      default: "07:00:00"
      selector:
        time:

    fade_in_time:
      name: Fade-in (s)
      default: 1.5
      selector:
        number:
          min: 0
          max: 15
          step: 0.5
          unit_of_measurement: s

    fade_out_time:
      name: Fade-out (s)
      default: 3
      selector:
        number:
          min: 0
          max: 15
          step: 0.5
          unit_of_measurement: s

    disable_switch:
      name: (Optional) Manual disable switch
      selector:
        entity:
          domain: input_boolean
      default: ""

# ───── INTERNAL VARS ─────
variables:
  sensors: !input occupancy_sensors
  lights:  !input light_targets
  disable_sw: !input disable_switch
  off_delay: !input off_delay
  night_start: !input night_start
  night_end:   !input night_end
  night_brightness: !input night_brightness
  day_brightness:   !input day_brightness
  fade_in:  !input fade_in_time
  fade_out: !input fade_out_time

mode: restart
max_exceeded: silent

# ───── TRIGGER ─────
trigger:
  - platform: state
    entity_id: !input occupancy_sensors

# ───── GLOBAL CONDITION ─────
condition:
  - condition: template
    value_template: >
      {{ disable_sw == '' or is_state(disable_sw, 'off') }}

# ───── ACTIONS ─────
action:
  - choose:
      # ── TURN-ON ──
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
        sequence:
          - variables:
              night_mode: >
                {% set now_t = now().time() %}
                {% set start = strptime(night_start, '%H:%M:%S').time() %}
                {% set end   = strptime(night_end,   '%H:%M:%S').time() %}
                {% if start < end %}
                  {{ start <= now_t < end }}
                {% else %}
                  {{ now_t >= start or now_t < end }}
                {% endif %}

          - service: light.turn_on
            target:
              entity_id: !input light_targets
            data:
              transition: "{{ fade_in | float }}"
              brightness_pct: "{{ night_brightness if night_mode else day_brightness }}"

      # ── TURN-OFF ──
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
        sequence:
          # 1) Wait until *all* sensors are clear
          - wait_template: >
              {{ expand(sensors) | selectattr('state','eq','on') | list | length == 0 }}

          # 2) Pause for the off-delay
          - delay: "{{ off_delay | int }}"

          # 3) Fade lights out
          - service: light.turn_off
            target:
              entity_id: !input light_targets
            data:
              transition: "{{ fade_out | float }}"
